__encoder_row:
  includes: [
    enc_1, enc_2, enc_3, enc_4, enc_5, enc_6, enc_7, enc_8
  ]
  binding:
    default: >
      RING(${me.index}) / VOL
    __shift: >
      RING(${me.index}) / PAN
    __device: >
      SEL / DEV(SEL) B1 P${me.Index}
    __device__shift: >
      SEL / DEV(SEL) B2 P${me.Index}

  encoders:
    enc_1:
      binding:
        __sends: >-
          SEL / SEND A
        __track: >
          SEL / VOL
    enc_2:
      binding:
        __sends: >-
          SEL / SEND B
        __track: >
          SEL / PAN
    enc_3:
      binding:
        __sends: >-
          SEL / SEND C
        __track: >
          SEL / SEND A
        __track__shift: >
          SEL / SEND C
    enc_4:
      binding:
        __sends: >-
          SEL / SEND D
        __track: >
          SEL / SEND B
        __track__shift: >
          SEL / SEND D
    enc_5:
      binding:
        __sends: >-
          SEL / SEND E
        __track: >
          SEL / DEV(SEL) B1 P1
        __track__shift: >
          SEL / DEV(SEL) B1 P5
    enc_6:
      binding:
        __sends: >-
          SEL / SEND F
        __track: >
          SEL / DEV(SEL) B1 P2
        __track__shift: >
          SEL / DEV(SEL) B1 P6
    enc_7:
      binding:
        __sends: >-
          SEL / SEND G
        __track: >
          SEL / DEV(SEL) B1 P3
        __track__shift: >
          SEL / DEV(SEL) B1 P7
    enc_8:
      binding:
        __sends: >-
          SEL / SEND H
        __track: >
          SEL / DEV(SEL) B1 P4
        __track__shift: >
          SEL / DEV(SEL) B1 P8

enc_master:
  binding:
    default: MST / VOL
    __shift: MST / CUE

tempo:
  binding: SEL / PAN

swing:
  binding: SEL / VOL
